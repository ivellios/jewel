# Generated by Django 4.1.1 on 2025-08-16 13:08

import django.core.validators
from django.db import migrations, models
import django.db.models.deletion
import uuid


class Migration(migrations.Migration):

    initial = True

    dependencies = []

    operations = [
        migrations.CreateModel(
            name="Game",
            fields=[
                (
                    "id",
                    models.UUIDField(
                        default=uuid.uuid4,
                        editable=False,
                        primary_key=True,
                        serialize=False,
                    ),
                ),
                ("title", models.CharField(max_length=255, verbose_name="Title")),
                (
                    "play_priority",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(10),
                        ],
                        verbose_name="Play Priority",
                    ),
                ),
                (
                    "played",
                    models.BooleanField(
                        default=False, null=True, verbose_name="Already Played"
                    ),
                ),
                (
                    "controller_support",
                    models.BooleanField(
                        blank=True,
                        default=False,
                        null=True,
                        verbose_name="Has controller support?",
                    ),
                ),
                (
                    "max_players",
                    models.PositiveIntegerField(blank=True, default=1, null=True),
                ),
                (
                    "party_fit",
                    models.BooleanField(blank=True, default=False, null=True),
                ),
                (
                    "review",
                    models.IntegerField(
                        blank=True,
                        null=True,
                        validators=[
                            django.core.validators.MinValueValidator(0),
                            django.core.validators.MaxValueValidator(10),
                        ],
                        verbose_name="Review value / rate",
                    ),
                ),
                (
                    "notes",
                    models.TextField(blank=True, null=True, verbose_name="Notes"),
                ),
            ],
        ),
        migrations.CreateModel(
            name="Genre",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Platform",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="Vendor",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("name", models.CharField(max_length=100)),
            ],
            options={
                "abstract": False,
            },
        ),
        migrations.CreateModel(
            name="GameOnPlatform",
            fields=[
                (
                    "id",
                    models.BigAutoField(
                        auto_created=True,
                        primary_key=True,
                        serialize=False,
                        verbose_name="ID",
                    ),
                ),
                ("added", models.DateField(blank=True, null=True)),
                (
                    "identifier",
                    models.CharField(
                        blank=True,
                        max_length=255,
                        null=True,
                        verbose_name="ID in the platform for generating URLs",
                    ),
                ),
                (
                    "price",
                    models.DecimalField(
                        blank=True,
                        decimal_places=2,
                        max_digits=6,
                        null=True,
                        verbose_name="Purchase price",
                    ),
                ),
                (
                    "game",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="platforms_meta_data",
                        to="games.game",
                    ),
                ),
                (
                    "platform",
                    models.ForeignKey(
                        on_delete=django.db.models.deletion.CASCADE,
                        related_name="games_meta_data",
                        to="games.platform",
                    ),
                ),
                (
                    "source",
                    models.ForeignKey(
                        blank=True,
                        null=True,
                        on_delete=django.db.models.deletion.SET_NULL,
                        to="games.vendor",
                    ),
                ),
            ],
        ),
        migrations.AddField(
            model_name="game",
            name="genres",
            field=models.ManyToManyField(blank=True, to="games.genre"),
        ),
        migrations.AddField(
            model_name="game",
            name="platforms",
            field=models.ManyToManyField(
                blank=True,
                related_name="games",
                through="games.GameOnPlatform",
                to="games.platform",
                verbose_name="Platform",
            ),
        ),
    ]
